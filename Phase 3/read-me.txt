Names:
  Christopher Goulart
  Fenim Patel


How to install:
  - First, place the db2 folder containing our project code into the C:\xampp\htdocs
    folder. The only file in the db2 folder in the queryAPI.php file.
  - Next, run the Apache and MySQL XAMPP modules and open the MySQL admin page.
  - Next, import the DB2.sql file into your db2 database. I recommend dropping
    the database first (db2 -> operations -> remove database), then creating it again
    (new -> "db2" as name -> utf8mb4_general_ci -> create). Import the sql file by
    clicking on db2 -> import -> choose the db2.sql file -> utf-8 -> go.
  - Next, you need to set up the android app on your android studio. Navigate
    to wherever your AndroidStudioProjects folder is located (probably in the documents
    folder under your user) and put the DatabasePhase3Android code there and open a new
    project in Android Studio.
  - Next, THIS IS VERY IMPORTANT, make sure to replace the host URL address for your server
    on line 32 in UtilityClass.java if you are going to run it on an actual device. As stated
    in a comment on the file on lines 29-30, don't use localhost as that is the device the app
    is running on (physical or emulator), but you can use 10.0.2.2 for the pc you are
    running the emulator on. If you are running on an emulator, you should be all set.
  - Next, open the project up in Android Studio, and click on the AVD manager button on
    the top right. It looks like a phone with an android in front of it. You'll want to
    create a virtual android device to run our app on. I recommend that you create a 
    new virtual device by clicking Create Virtual Device -> Pixel C (tablet) -> Next ->
    Select Android Q (API 29) -> Next -> Click Finish. The app should open on the 
    tablet emulator by clicking the Run button on the top which is a green triangle. Make
    sure the app and the Pixel C (API 29) are selected before clicking on Run.


Listed below are locations in our code of the project requirements and how to perform
these actions as a user using the web interface:
        
  1. Admin will have a default account. Parents and students will be able to create an
     account. Parents must create account before their children. Students are put into groups
     according to their grade level. Students will be able to update their own accounts;
     parents will be able to update both their own and their childrenâ€™s accounts.

     CODE LOCATION: RegAdmPage.java (create admin), RegParPage.java (create parent),
        RegStuPage.java (create student), LoginPage.java, HomeAdminPage.java (click on Account Info here),
        HomeParentPage.java (click on Account Info here), HomeStudentPage.java (click on Account Info here),
        UpdateAccount.java (where the account update queries are performed),
        activity_reg_adm.xml, activity_reg_par.xml, activity_reg_stu.xml, activity_login.xml,
        activity_home_admin.xml, activity_home_parent.xml, activity_home_student.xml,
        activity_update.xml (xml pages are layout pages for design)
     INSTRUCTIONS:
        To register as a specific user, click on register the type of user you want to
        register on the homepage and fill in the form with the desired information. Remember,
        to register a student a parent account must already exist and be given at student
        registration.
        To edit a user's information they registered with, you will need to login. A student
        can edit their own information, a parent can edit their own and their children's
        information, and an admin can edit their own or anyone's information.
        To login as a user, click login or sign in and enter the correct email and pasword.
        Logging in will take you to the student page, parent page, or admin page depending on
        who you logged in as.
        To edit your own information, click on Account Info and type new inputs into the form on the page
        after you log in and click submit. If you want to edit your child's information or
        another user's information as an admin, click Edit Student or Edit Parent or Edit
        Admin next to the corresponding user's name and type new inputs into the form at the
        top of the page and click submit.

  2. Meeting are hold on Saturday and Sunday evenings. All meetings are one-hour long.
     Each meeting should have 3-6 mentees and 2-3 mentors. A student can join all the
     future meetings for the academic year or join only one meeting for the week by end of
     Thursday of the week; Mentees and mentors can quit from a meeting or all meetings at
     any time. Mentees and mentors can also be assigned to meetings by admin.

     CODE LOCATION: MentorOfPage.java (page to display table of enrolled; drop features),
        MenteeOfPage.java (page to display table of enrolled; drop features), PossibleMentorOfPage.java 
        (page to display table not enrolled; add features), PossibleMenteeOfPage.java 
        (page to display table not enrolled; add features), HomeStudentPage.java (students
        may not see above options/buttons based on grade level), activity_mentor_of.xml, 
        activity_mentee_of.xml, activity_possible_mentor_of.xml, activity_possible_mentee_of.xml,
        activity_home_student.xml (xml pages are layout pages for design)
     INSTRUCTIONS:
        A student can add or drop one displayed meeting, or add or drop all displayed
        meetings with the same name, not on the same weekend (for the rest of the year).
        If there are already 3 mentors or 6 mentees, your add request will not go through
        and a toast error will be displayed. Also, you can only be a mentor of one
        meeting per weekend, you can only be a mentee of meetings with different times,
        and you can only have one meeting per subject each weekend as a mentee.
        Previous meetings will not show up as possible meetings, but they do show up in
        enrolled meetings. Future meetings show up, however you can only add the current weekend's
        meetings by Thursday. Mentors and mentees can also be assigned by admins and parents (children)
        by clicking on the Edit Student button for the desired student, and then adding the meeting(s).

  3. A mentor will be able to see list of other mentors and all mentees of the meetings he/she
     is mentoring including names and email addresses.

     CODE LOCATION: MeetingPage.java (shows info, material, mentors, mentees based on logged in user), 
        MentorOfPage.java (page to display table of enrolled; view features),
        MenteeOfPage.java (page to display table of enrolled; view features), PossibleMentorOfPage.java 
        (page to display table not enrolled; view features), PossibleMenteeOfPage.java 
        (page to display table not enrolled; view features), activity_meeting.xml, activity_mentor_of.xml, 
        activity_mentee_of.xml, activity_possible_mentor_of.xml, activity_possible_mentee_of.xml,
        (xml pages are layout pages for design)
     INSTRUCTIONS:
        You can click on view meeting to see the meeting's information,
        and the meeting's mentees and mentors if you are logged in as a mentor or admin, 
        or the parent of the mentor.

  4. A student will be able to see the current and past materials for each meeting of the
     group he/she is in. 

     CODE LOCATION: MeetingPage.java (shows info, material, mentors, mentees based on logged in user), 
        MentorOfPage.java (page to display table of enrolled; view features),
        MenteeOfPage.java (page to display table of enrolled; view features), PossibleMentorOfPage.java 
        (page to display table not enrolled; view features), PossibleMenteeOfPage.java 
        (page to display table not enrolled; view features), activity_meeting.xml, activity_mentor_of.xml, 
        activity_mentee_of.xml, activity_possible_mentor_of.xml, activity_possible_mentee_of.xml,
        (xml pages are layout pages for design)
     INSTRUCTIONS:
        You can view meetings off a student page and you can see the meeting's materials when logged in
        as an admin or an enrolled mentee or mentor. Parents of students of meetings
        will also be able to see posted materials by clicking view meeting.


Notes:
  - Throughout the PDF, there was no requirement to add meetings, so we did not implement this.
  - For every query we use, we call a function called makePOST in our Java Utility class. This
    function makes a POST request to our queryAPI.php running on our server. The query API is 
    what actually executes the query in php, and returns JSON data to our Java function/app.
  - As either a student, parent, or admin, go to a student's page (your own page if you
    are a student) and view the various buttons called "Show meetings mentor of",
    "Add meetings as a mentor", "Show meetings mentee of",
    and "Add meetings as a mentee". Mentor buttons will only show up
    for students in grade 9-12 as grades 6-8 can only be mentees. Mentee buttons will only
    show up for students in grade 6-9 as grades 10-12 can only be mentors. As you can see,
    only grade 9 students can see both mentor and mentee buttons/tables. Meetings in specific groups
    that the student can be a mentor or mentee of will show up based on the group/grade the 
    student is in.